{"ast":null,"code":"var _jsxFileName = \"/Users/stellalee/lab2-stellajslee/src/App.js\";\nimport './App.css';\nimport React, { Component, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      rows: 6,\n      columns: 7,\n      moves: [{\n        x: 0,\n        y: 0,\n        player: \"red\"\n      }, {\n        x: 0,\n        y: 1,\n        player: \"red\"\n      }]\n    };\n\n    this.resetBoard = () => {\n      this.setState({\n        moves: []\n      });\n    };\n\n    this.getPiece = (x, y) => {\n      const list = this.state.moves.filter(item => {\n        return item.x === x && item.y === y;\n      });\n      return list[0];\n    };\n  }\n\n  // render a square board\n  renderBoard() {\n    // get number of rows and columns from state\n    const {\n      rows,\n      columns\n    } = this.state;\n    const rowViews = []; // create rows and columns for the board\n\n    for (let row = 0; row < this.state.rows; row += 1) {\n      const columnViews = [];\n\n      for (let column = 0; column < this.state.columns; column += 1) {\n        const piece = this.getPiece(column, row);\n        columnViews.push( /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"column\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bu\",\n            children: piece ? /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"bu-selected\",\n              style: {\n                backgroundColor: piece.player\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 34\n            }, this) : undefined\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 34\n        }, this));\n      }\n\n      rowViews.push( /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: columnViews\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this));\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"board\",\n      children: rowViews\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: this.renderBoard()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this)\n    }, void 0, false);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/stellalee/lab2-stellajslee/src/App.js"],"names":["React","Component","useState","App","state","rows","columns","moves","x","y","player","resetBoard","setState","getPiece","list","filter","item","renderBoard","rowViews","row","columnViews","column","piece","push","backgroundColor","undefined","render"],"mappings":";AAAA,OAAO,WAAP;AACA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;;;;AAEA,MAAMC,GAAN,SAAkBF,SAAlB,CAA4B;AAAA;AAAA;AAAA,SAExBG,KAFwB,GAEhB;AACJC,MAAAA,IAAI,EAAE,CADF;AAEJC,MAAAA,OAAO,EAAE,CAFL;AAGJC,MAAAA,KAAK,EAAE,CAAE;AACLC,QAAAA,CAAC,EAAE,CADE;AACCC,QAAAA,CAAC,EAAE,CADJ;AACOC,QAAAA,MAAM,EAAE;AADf,OAAF,EAGH;AACIF,QAAAA,CAAC,EAAE,CADP;AACUC,QAAAA,CAAC,EAAE,CADb;AACgBC,QAAAA,MAAM,EAAE;AADxB,OAHG;AAHH,KAFgB;;AAAA,SAcxBC,UAdwB,GAcX,MAAM;AACf,WAAKC,QAAL,CAAc;AAAEL,QAAAA,KAAK,EAAE;AAAT,OAAd;AACH,KAhBuB;;AAAA,SAmBxBM,QAnBwB,GAmBb,CAACL,CAAD,EAAIC,CAAJ,KAAU;AACjB,YAAMK,IAAI,GAAG,KAAKV,KAAL,CAAWG,KAAX,CAAiBQ,MAAjB,CAAyBC,IAAD,IAAU;AAC3C,eAAQA,IAAI,CAACR,CAAL,KAAWA,CAAX,IAAgBQ,IAAI,CAACP,CAAL,KAAWA,CAAnC;AACH,OAFY,CAAb;AAIA,aAAOK,IAAI,CAAE,CAAF,CAAX;AACH,KAzBuB;AAAA;;AA2BxB;AACAG,EAAAA,WAAW,GAAG;AACV;AACA,UAAM;AAAEZ,MAAAA,IAAF;AAAQC,MAAAA;AAAR,QAAoB,KAAKF,KAA/B;AACA,UAAMc,QAAQ,GAAG,EAAjB,CAHU,CAKV;;AACA,SAAK,IAAIC,GAAG,GAAG,CAAf,EAAkBA,GAAG,GAAG,KAAKf,KAAL,CAAWC,IAAnC,EAAyCc,GAAG,IAAI,CAAhD,EAAmD;AAC/C,YAAMC,WAAW,GAAG,EAApB;;AACA,WAAK,IAAIC,MAAM,GAAG,CAAlB,EAAqBA,MAAM,GAAG,KAAKjB,KAAL,CAAWE,OAAzC,EAAkDe,MAAM,IAAI,CAA5D,EAA+D;AAC3D,cAAMC,KAAK,GAAG,KAAKT,QAAL,CAAcQ,MAAd,EAAsBF,GAAtB,CAAd;AAEAC,QAAAA,WAAW,CAACG,IAAZ,eAAiB;AAAK,UAAA,SAAS,EAAC,QAAf;AAAA,iCAEb;AAAK,YAAA,SAAS,EAAC,IAAf;AAAA,sBAEKD,KAAK,gBAAG;AAAQ,cAAA,SAAS,EAAC,aAAlB;AAAgC,cAAA,KAAK,EAAE;AAACE,gBAAAA,eAAe,EAAEF,KAAK,CAACZ;AAAxB;AAAvC;AAAA;AAAA;AAAA;AAAA,oBAAH,GAA+Ee;AAFzF;AAAA;AAAA;AAAA;AAAA;AAFa;AAAA;AAAA;AAAA;AAAA,gBAAjB;AAOH;;AACDP,MAAAA,QAAQ,CAACK,IAAT,eACI;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA,kBAAsBH;AAAtB;AAAA;AAAA;AAAA;AAAA,cADJ;AAGH;;AAED,wBACI;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA,gBACKF;AADL;AAAA;AAAA;AAAA;AAAA,YADJ;AAKH;;AAEDQ,EAAAA,MAAM,GAAG;AAEL,wBACI;AAAA,6BACI;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA,+BACI;AAAA,oBACK,KAAKT,WAAL;AADL;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ,qBADJ;AASH;;AAtEuB;;AA0E5B,eAAed,GAAf","sourcesContent":["import './App.css';\nimport React, {Component, useState} from \"react\";\n\nclass App extends Component {\n    // states of rows and columns\n    state = {\n        rows: 6,\n        columns: 7,\n        moves: [ {\n            x: 0, y: 0, player: \"red\"\n        },\n            {\n                x: 0, y: 1, player: \"red\"\n            }\n        ],\n    };\n\n    resetBoard = () => {\n        this.setState({ moves: [] });\n    }\n\n    // get moves with particular row and column\n    getPiece = (x, y) => {\n        const list = this.state.moves.filter((item) => {\n            return (item.x === x && item.y === y);\n        });\n\n        return list [0];\n    }\n\n    // render a square board\n    renderBoard() {\n        // get number of rows and columns from state\n        const { rows, columns } = this.state;\n        const rowViews = [];\n\n        // create rows and columns for the board\n        for (let row = 0; row < this.state.rows; row += 1) {\n            const columnViews = [];\n            for (let column = 0; column < this.state.columns; column += 1) {\n                const piece = this.getPiece(column, row);\n\n                columnViews.push(<div className=\"column\">\n                    {/* circular buttons that players will be pressing */}\n                    <div className=\"bu\">\n                        {/* if there is piece associated with that coordinate, change colour red/yellow if not undefined */}\n                        {piece ? <button className=\"bu-selected\" style={{backgroundColor: piece.player}}/> : undefined}\n                    </div>\n                </div>);\n            }\n            rowViews.push(\n                <div className=\"row\">{columnViews}</div>\n            );\n        }\n\n        return (\n            <div className=\"board\">\n                {rowViews}\n            </div>\n        )\n    }\n\n    render() {\n\n        return (\n            <>\n                <div className=\"container\">\n                    <div>\n                        {this.renderBoard()}\n                    </div>\n                </div>\n            </>\n        )\n    }\n\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}